{"version":3,"sources":["components/Container/Container.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js","redux/phonebook/phonebook-selectors.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactForm.container.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","components/Filter/Filter.js","components/Filter/Filter.container.js","App.js","redux/store.js","index.js"],"names":["Container","children","className","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","contact","post","id","delete","contacts","createReducer","_","payload","state","filter","loading","combineReducers","getContacts","phonebook","getFilter","getLoading","getFilteredContacts","createSelector","normalizedContact","toLowerCase","includes","Notification","isExist","CSSTransition","in","timeout","classNames","unmountOnExit","ContactForm","handleInputChange","event","setState","currentTarget","value","handleSubmit","e","props","allContacts","onSubmit","preventDefault","find","timer","setTimeout","clearTimeout","this","type","pattern","title","required","onChange","Component","connect","phonebookOperations","ContactList","isLoading","onDeleteContact","color","height","width","TransitionGroup","component","map","onClick","viewBox","d","Filter","target","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebookReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b528668c.chunk.js","sourcesContent":["import './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactSuccess');\r\nexport const getContactsError = createAction('contacts/getContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:8080';\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(error => dispatch(getContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { getContacts, addContact, deleteContact };\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\n// const initialState = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nconst contacts = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getLoading = state => state.phonebook.loading;\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedContact = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedContact),\r\n    );\r\n  },\r\n);\r\n","import { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ isExist }) => {\r\n  return (\r\n    <CSSTransition in={isExist} timeout={250} classNames=\"fade\" unmountOnExit>\r\n      <div className=\"notification\">\r\n        <p>This contact is already exist!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport Notification from '../Notification';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    isExist: false,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { allContacts, onSubmit } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    if (allContacts.find(({ name }) => name === this.state.name)) {\r\n      this.setState({ name: '', number: '', isExist: true });\r\n      const timer = setTimeout(() => {\r\n        this.setState({ isExist: false });\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, handleInputChange } = this;\r\n    const { name, number, isExist } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <label className=\"form__lable\">\r\n            <span className=\"form__lable__text\">Name</span>\r\n            <input\r\n              className=\"form__input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label className=\"form__lable\">\r\n            <span className=\"form__lable__text\">Number</span>\r\n            <input\r\n              className=\"form__input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <button className=\"form__button\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <Notification isExist={isExist} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import { connect } from 'react-redux';\r\nimport { phonebookOperations, getContacts } from '../../redux/phonebook';\r\nimport ContactForm from './ContactForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  allContacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(phonebookOperations.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { Component } from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.scss';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, contacts, onDeleteContact } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"contact__loader\">\r\n          {isLoading && (\r\n            <Loader\r\n              type=\"Bars\"\r\n              color=\"#000000\"\r\n              height={100}\r\n              width={100}\r\n              timeout={3000}\r\n            />\r\n          )}\r\n        </div>\r\n        <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n          {contacts.map(({ id, name, number }) => (\r\n            <CSSTransition\r\n              key={id}\r\n              timeout={250}\r\n              classNames=\"dub\"\r\n              unmountOnExit\r\n            >\r\n              <li className=\"contact-list__item\" key={id}>\r\n                <p className=\"contact-list__item__name\">{name}</p>\r\n                <p className=\"contact-list__item__number\">{number}</p>\r\n                <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                  <svg\r\n                    height=\"365.696pt\"\r\n                    viewBox=\"0 0 365.696 365.696\"\r\n                    width=\"365.696pt\"\r\n                  >\r\n                    <path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" />\r\n                  </svg>\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  phonebookOperations,\r\n  getLoading,\r\n  getFilteredContacts,\r\n} from '../../redux/phonebook';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\r\n  getContacts: () => dispatch(phonebookOperations.getContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className=\"filter\">\r\n      <span>Find contacts by name</span>\r\n      <input\r\n        className=\"filter__input\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport { changeFilter, getFilter } from '../../redux/phonebook';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <Container>\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { phonebookReducer } from './phonebook';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}